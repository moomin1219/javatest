

import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.Socket;

public class Client2 {

   public static void main(String[] args) throws IOException {
       Socket socket = null;
       DataOutputStream os = null;
		
       File backupFolder = new File ("./BACKUP");
       if(!backupFolder.exists()) {
	   backupFolder.mkdirs();
       }
		
       try {
	    socket = new Socket("127.0.0.1", 27015);
	    os = new DataOutputStream(socket.getOutputStream());
			
	    byte[] buffer = new byte[4096];
	    int length;
			
	    File directory = new File("./INPUT");
	    File[] fList = directory.listFiles();
	    for (File file : fList) {
		if(file.isFile()) {
		    os.writeUTF(file.getName());
		    os.writeInt((int)file.length());
					
		    FileInputStream is = null;
		    try {
			is = new FileInputStream(file.getPath());
			while((length = is.read(buffer)) != -1) {
			    os.write(buffer, 0, length);
			}
		    } finally {
			if(is != null){
			    is.close();
			}
		    }
					
		    if(file.renameTo(new File(backupFolder+"/"+file.getName()))) {
						
		    } else {
			System.out.println("FILE BACKUP ERROR");
		    }
		}
	    }
       } catch (IOException e) {
	   e.printStackTrace();
       } finally {
	   if(os != null) {
	      os.close();
	   }
	   if(socket != null) {
	      socket.close();
	   }
       }

    }

}



import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Server2 {

   public static final int BUF_SIZE = 4096;
   public static void main(String[] args) {
       ServerSocket serverSocket = null;
       try {
	   serverSocket = new ServerSocket(27015);
	   byte[] buffer = new byte[BUF_SIZE];
	   int length;
	   //while (!isStop) {
	       Socket socket = null;
	       DataInputStream is = null;
	       try {
		   socket = serverSocket.accept();
		   is = new DataInputStream(socket.getInputStream());
		   while(true) {
		      String fileName = is.readUTF();
		      int fileSize = is.readInt();
						
		      while(fileSize > 0) {
			 length = is.read(buffer,0,Math.min(fileSize, buffer.length));
			 fileSize -= length;
			 FileOutputStream fw = null;
			 try {
			     fw = new FileOutputStream("./OUTPUT/"+fileName, true);
			     fw.write(buffer, 0, length);
			 } finally {
			    if (fw != null) {
				fw.close();
			    }
			 }
		      }
		   }
		} catch (EOFException e) {
					
		} catch (IOException e) {
		    e.printStackTrace();
		} finally {
		    if (socket != null) {
			socket.close();
		    }
		}
	    //}
	} catch (IOException e) {
	    e.printStackTrace();
	} finally {
	   try {
	       if(serverSocket != null) {
		  serverSocket.close();
	       }
	   } catch (IOException e) {
	       e.printStackTrace();
	   }
        }
   }

}
