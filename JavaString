// substring
String str = "HAPPYEASTER";  
String substr1 = str.substring(5); // 5번째 부터 끝까지 
String substr2 = str.substring(0, 5); // 0번째부터 5-1번째까지
System.out.println(substr1);
System.out.println(substr2);

[결과] 
EASTER
HAPPY


// split
String str = "moomin:totoro:mickey";
String[] arr = str.split(":");
for (int i=0; i < arr.length; i++) {
   System.out.println(arr[i]);
}

[결과]
moomin
totoro
mickey

*파일명 확장자 뺀 파일명 추출
String fileName = fileNameFull.substring(0, fileNameFull.lastIndexOf('.'));
 

// concat
String str = "Good";
String cc = str.concat("After").concat("noon");
System.out.println(cc);

[결과]
GoodAfternoon


// trim
String str = " nder The Se ";
String trim = str.trim(); //문자열 앞뒤 공백 제거
System.out.println("U"+str+"a");
System.out.println("U"+trim+"a");

[결과]
U nder The Se a
Under The Sea

* 앞공백만 제거
String trim1 = str.replaceAll("^\\s", "");
System.out.println("U"+trim1+"a");

[결과]
Under The Se a

* 뒷공백만 제거
String trim2 = str.replaceAll("\\s+$","");
System.out.println("U"+trim2+"a");

[결과]
U nder The Sea

* 문자열 모든 공백 제거
String trim3 = str.replaceAll("\\s","");
System.out.println("U"+trim3+"a");

[결과]
UnderTheSea


// replace, replaceFirst, replaceAll
String str = "simple thing";
String repstr = str.replace("i", "a"); //모든 단어를 바꿔줌
String repFstr = str.replaceFirst("i", "a"); //처음 나오는 단어만 바꿔줌. 변경 전 문자 정규식 가능
String repAstr1 = str.replaceAll("i", "a"); // 모든 단어를 바꿔줌 .변경 전 문자 정규식 가능
String repAstr2 = str.replaceAll("\\s","-"); 
System.out.println(repstr);
System.out.println(repFstr);
System.out.println(repAstr1);
System.out.println(repAstr2);

[결과]
sample thang
sample thing
sample thang
simple-thing


// contains
String str = "disney land";
if(str.contains("la")) {    //문자열에 검색하고자 하는 문자가 있는지 확인
   System.out.println("true");
  }

[결과]
true


// indexOf / lastIndexOf
String str = "season";
int pos1 = str.indexOf("s"); //해당 문자가 처음 나타나는 위치 반환 
int pos2 = str.indexOf("b"); //해당 문자 미포함 시 -1
System.out.println(pos1);
System.out.println(pos2);

if(str.indexOf("s") > -1) {
 System.out.println("include"); //문자 미포함 시 -1 리턴하므로 포함여부 확인 시 사용 가능
}

int pos3 = str.lastIndexOf("s"); // 끝에서 부터 시작해서 해당 문자가 처음 나타나는 위치 반환
System.out.println(pos3);

[결과]
0
-1
include
3


// matches
String str = "totoro1234";
if(str.matches(".*ro.*")) {  //정규표현식을 이용한 문자열 검색 
   System.out.println("match");
  }
if(str.matches(".*[0-9].*")) {
   System.out.println("match");  //정규표현식으로 문자열에 숫자가 있는지 확인
  }

[결과]
match
match


// charAt
String str = "telescope";
char cha = str.charAt(4); // 해당 index번째 문자 반환
System.out.println(cha);

[결과]
s


// format
String name = "cho";
int age = 30;
double weight = 52.534;
String format = String.format("이름: %s 나이: %d 체중: %.2f", name, age, weight);
System.out.println(format);
System.out.printf("이름: %s 나이: %d 체중: %.2f" , name, age, weight);

[결과]
이름: cho 나이: 30 체중: 52.53
이름: cho 나이: 30 체중: 52.53


// compareTo
String s1 = "ABCDE";
String s2 = "ABCDE";
String s3 = "ABC";
String s4 = "DBA";
String s5 = "YA";
System.out.println(s1.compareTo(s2)); // s1 = s2 : 0
System.out.println(s3.compareTo(s4)); // s1 < s2 : -
System.out.println(s4.compareTo(s3)); // s1 > s2 : +
System.out.println(s1.compareTo(s3)); // s1 > s3 : + 
System.out.println(s1.compareTo(s5)); // s1 < s5 : -

[결과]
0
-3
3
2
-24


startWith, endsWith
